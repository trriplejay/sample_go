
language: go
go:
  - 1.7.6
  - 1.8.5
  - 1.9.2

build:
  pre_ci_boot:
    image_name: trriplejay/golang
    image_tag: test
  ci:
    - '[[ -s "$HOME/.gvm/scripts/gvm" ]] && source $HOME/.gvm/scripts/gvm'
    - gvm use $SHIPPABLE_GO_VERSION
    - cat /etc/drydock/.env
    - printenv
    - go version
    - go test
    - go run hello.go

  on_success:
    - echo "works"
  on_failure:
    - echo "not good"



resources:
  - name: myGoTestRepo
    type: gitRepo
    integration: github
    versionTemplate:
      sourceName: trriplejay/sample_go
      branch: master

jobs:

  - name: myGoTestRunSh
    type: runSh
    steps:
      - IN: myGoTestRepo
      - TASK:
          name: TestGo176
          runtime:
            options:
              imageName: trriplejay/golang
              imageTag: test
          script:
            - docker images
            - '[[ -s "$HOME/.gvm/scripts/gvm" ]] && source $HOME/.gvm/scripts/gvm'
            - gvm use 1.7.6
            - pushd $MYGOTESTREPO_STATE
            - go version
            - go test
            - go run hello.go
      - TASK:
          name: TestGo185
          runtime:
            options:
              imageName: trriplejay/golang
              imageTag: test
          script:
            - '[[ -s "$HOME/.gvm/scripts/gvm" ]] && source $HOME/.gvm/scripts/gvm'
            - gvm use 1.8.5
            - pushd $MYGOTESTREPO_STATE
            - go version
            - go test
            - go run hello.go
      - TASK:
          name: TestGo192
          runtime:
            options:
              imageName: trriplejay/golang
              imageTag: test
          script:
            - '[[ -s "$HOME/.gvm/scripts/gvm" ]] && source $HOME/.gvm/scripts/gvm'
            - gvm use 1.9.2
            - pushd $MYGOTESTREPO_STATE
            - go version
            - go test
            - go run hello.go
